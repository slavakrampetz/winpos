# https://taskfile.dev

version: '3'

## Common settings
silent: true
#expansions: 2

vars:
  EXENAME: winpos{{exeExt}}
  EXE: ./bin/{{.EXENAME}}

#  GO_PACKAGES:
#    sh: go list ./...

#  GIT_COMMIT:
#    sh: git log -n 1 --format=%h


tasks:

  clean:
    desc: Cleanup build artefacts
    dir: ./bin
    cmds:
      - rm -f winpos winpos-cli winpos.exe winpos-cli.exe
    silent: false

  build:
    desc: Build winpos.exe
    cmds:
      - task: build-do
    sources:
      - Taskfile.yml
      - src/**/*.go
      - go.mod
    generates:
      - ./{{.EXE}}
    method: checksum

  build-do:
    desc: Build winpos.exe
    cmds:
      - cmd: echo "Building {{.EXE}} â€¦"
        silent: false
      - cmd: go build -ldflags -H=windowsgui -o ./{{.EXE}} ./cmd/winpos/main.go

  run-list:
    deps: [build]
    cmds:
      - echo "Launching {{.EXE}} ..."
      - cmd: ./{{.EXE}} list
        ignore_error: true

  # test-all:
  #   desc: Tests all go modules
  #   cmds:
  #     - echo "----------------------------------------------"
  #     - echo "Starting tests:..."
  #     - echo "----------------------------------------------"
  #     - go test ./src/...

  vendor:
    desc: Sync vendor/ directory according to go.mod file
    cmds:
      - go mod vendor

  # lint:
  #   desc: Runs golint
  #   cmds:
  #     - golint {{catLines .GO_PACKAGES}}
  #   silent: true

  # ## Dependencies
  # dl-deps:
  #   desc: Downloads cli dependencies
  #   cmds:
  #     - task: go-get
  #       vars: {REPO: golang.org/x/lint/golint}
  #     #- task: go-get
  #     #  vars: {REPO: github.com/goreleaser/goreleaser}
  #     #- task: go-get
  #     #  vars: {REPO: github.com/goreleaser/godownloader}

  # go-get:
  #   cmds:
  #     - go get -u {{.REPO}}

  # packages:
  #   cmds:
  #     - echo '{{.GO_PACKAGES}}'
  #   silent: true
